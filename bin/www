var clientApp = require('../clientServer')
var apiApp = require('../apiServer')
var http = require('http')
var { resetIndicesAndAddData } = require('../elasticsearch') 

resetIndicesAndAddData()

var clientPort = 3000
var clientServer = configureAndStartServer(clientApp, clientPort, 'client')

var apiPort = 80
var apiServer = configureAndStartServer(apiApp, apiPort, 'api')

function configureAndStartServer(app, port, serverName) {
  app.set('port', port)
  var server = http.createServer(app)
  server.listen(port, () => onListening(serverName, port))
  server.on('error', onError)
  return server
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening(serverName, port) {
  console.log(serverName, 'server listening on port', port)
}
