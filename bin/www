var clientApp = require('../clientServer')
var apiApp = require('../apiServer')
var debug = require('debug')('sf-tht:server')
var http = require('http')

var clientPort = process.env.CLIENT_PORT || '3000'
var apiPort = process.env.CLIENT_PORT || '80'
clientApp.set('port', clientPort)
apiApp.set('port', apiPort)

var clientServer = http.createServer(clientApp)
clientServer.listen(clientPort, () => onListening(clientServer))

var apiServer = http.createServer(apiApp)
apiServer.listen(apiPort, () => onListening(apiServer))

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening(server) {
  var addr = server.address()
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port
  debug('Listening on ' + bind)
}
